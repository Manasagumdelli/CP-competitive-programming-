class MyQueue:

    def __init__(self):
        self.stack=[]

    def push(self, x: int) -> None:
        self.stack.append(x)

    def pop(self) -> int:
        return self.stack.pop(0)

    def peek(self) -> int:
        return self.stack[0]

    def empty(self) -> bool:
       return len(self.stack)==0 

#linked list:
class Qnode(object):
    def __init__(self,val):
        self.val=val
        self.next=None
class MyQueue:
    def __init__(self):
        self.head=None
        self.tail=None
    def push(self,x:int)->None:
        node=Qnode(x)
        if not self.head:
            self.head=node
            self.tail=node
        else:
            self.tail.next=node
            self.tail=node
    def pop(self)->int:
        temp=self.head
        self.head=temp.next
        return temp.val
    def peek(self)->int:
        return self.head.val
    def empty(self)->bool:
        return self.head=None
